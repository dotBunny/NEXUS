name: Manual Tests
run-name: Manual Tests (${{ inputs.tests }})

on:
  workflow_dispatch:
    inputs:
      tests:
        description: 'What tests should be dispatched?'
        required: true
        type: choice
        options:
            - 'Unit Tests'
            - 'Performance Tests'
            - 'Functional Tests'
      clean:
        description: 'Clean local repository?'
        required: true
        type: boolean
        default: false

jobs:
  ManualTest:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          clean: ${{ inputs.clean }}

      - name: Get Branch Settings
        id: settings
        run: |
          $json = Get-Content .github/branch.json | ConvertFrom-Json
          $ue = $json.installation
          echo "::set-output name=ue::$ue"
        shell: powershell

      - name: Clean workspace
        uses: ./.github/actions/workspace-clean

      - name: Build project
        uses: ./.github/actions/build-project 
        with:
          ue-installation: ${{ steps.settings.outputs.ue }}

      - name: Run manual tests
        uses: ./.github/actions/ue-cmd-tests
        with:
          ue-installation: ${{ steps.settings.outputs.ue }}
          tests: '${{ inputs.tests }}'

      - name: Parse UE log
        if: always()
        uses: ./.github/actions/ue-parse-log

      - name: Parse test results
        if: always()
        uses: ./.github/actions/ue-parse-results

      - name: Gather and upload artifacts
        if: always()
        uses: ./.github/actions/upload-artifacts
        with:
          artifact-name: 'manual-${{ github.run_number }}'

      # This needs to be on the workflow to ensure it has access to the GITHUB_STEP_SUMMARY
      - name: Update summary
        if: always()
        shell: powershell
        run: |
          $markdownPath = "${{ github.workspace }}\Staging\TestResults\index.md"
          if(Test-Path -Path $markdownPath)
          {
            $markdownLines = Get-Content -Path $markdownPath
            $outputPath = $env:GITHUB_STEP_SUMMARY
            Write-Output "Updating GITHUB_STEP_SUMMARY with $outputPath."
            foreach ($line in $markdownLines) 
            {
              Write-Output "$line" >> $outputPath
            }
          }